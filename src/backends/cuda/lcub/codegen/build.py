import os
import sys
import shutil

header = '''// This file is generated by build.py
#pragma once
'''

dst = "../../../../../include/luisa/backends/ext/cuda/lcub/"

# copy all files and directories from ./src to ../private
for file in os.listdir("./src"):
    if(os.path.isfile("./src/" + file)):
        shutil.copy("./src/" + file, "../private/" + file)
    else:
        shutil.copytree("./src/" + file, "../private/" + file, dirs_exist_ok=True)


# copy all files and directories from ./include to dst
for file in os.listdir("./include"):
    if(os.path.isfile("./include/" + file)):
        shutil.copy("./include/" + file, dst + file)
    else:
        shutil.copytree("./include/" + file, dst + file, dirs_exist_ok=True)

# copy "cuda_lcub_command.cpp" to ../
# shutil.copy("./cuda_lcub_command.cpp", "../cuda_lcub_command.cpp")

build_list = [
    "device_scan", 
    "device_reduce", 
    "device_radix_sort",
    "device_merge_sort", 
    "device_run_length_encode",
    "device_select",
    "device_partition",
    "device_spmv"
    # "device_adjacent_difference",
    ]

has_clang_format = not os.system("clang-format --version")
if not has_clang_format:
    print("clang-format not found, skipping formatting")
for build in build_list:
    os.system("python ./scripts/" + build + ".py")
    if has_clang_format:
        os.system(f"clang-format -i ../{build}.h ../private/dcub/{build}.h")
    header += f'''#include "{build}.h"''' + "\n"

# dcub_header_file = open("../private/dcub/dcub.h", "w")
# dcub_header_file.write(header)
# dcub_header_file.close()

lcub_header_file = open(dst + "lcub.h", "w")
lcub_header_file.write(header)
lcub_header_file.close()

# move all "*.h" files from ../ to dst
for file in os.listdir("../"):
    if(file.endswith(".h")):
        shutil.move("../" + file, dst + file)
