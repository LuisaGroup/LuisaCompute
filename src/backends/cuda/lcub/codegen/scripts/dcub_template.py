class template:
    def __init__(self, web_page = "https://nvlabs.github.io/cub/index.html"):
        self.header_template = '''// This file is generated by $FILE_NAME$.py
#pragma once

#include <luisa/backends/ext/cuda/lcub/dcub/dcub_common.h>

namespace luisa::compute::cuda::dcub {

class DCUB_API $CLASS_NAME$ {
// DOC:  $WEBPAGE$
public:
$FUNC_SIGS$
};
}'''.replace('$WEBPAGE$', web_page)


        self.src_template = ''' // This file is generated by $FILE_NAME$.py
#include "$FILE_NAME$.h"
#include "dcub_utils.cuh"
#include <cub/device/$FILE_NAME$.cuh>

namespace luisa::compute::cuda::dcub {
// DOC:  $WEBPAGE$
$FUNC_IMPLS$
}
'''.replace('$WEBPAGE$', web_page)
        self.func_sig_template = '''static cudaError_t $FUNC_NAME$(void* d_temp_storage, size_t& temp_storage_bytes, $FUNC_SIG_ARGS$, cudaStream_t stream = nullptr);'''
        self.func_impl_template = '''cudaError_t $CLASS_NAME$::$FUNC_NAME$(void* d_temp_storage, size_t& temp_storage_bytes, $FUNC_IMPL_ARGS$, cudaStream_t stream)
{
    return ::cub::$CLASS_NAME$::$FUNC_NAME$(d_temp_storage, temp_storage_bytes, $INNER_FUNC_INPUT_ARGS$, stream);
}'''

id_type = "int32_t"
value_types = ["int32_t", "uint32_t", "int64_t", "uint64_t", "float", "double"]
integer_value_types = ["int32_t", "uint32_t", "int64_t", "uint64_t"]
float_value_types = ["float", "double"]