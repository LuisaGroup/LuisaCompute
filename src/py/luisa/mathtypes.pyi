def dispatch_size(*args, **kwargs): ...


def log_level_warning(*args, **kwargs): ...


def step(*args, **kwargs): ...


def smoothstep(*args, **kwargs): ...


def make_uint2(*args, **kwargs): ...


def make_float3(*args, **kwargs): ...


def make_uint4(*args, **kwargs): ...


def log_level_verbose(*args, **kwargs): ...


def to_bytes(*args, **kwargs): ...


def sinh(*args, **kwargs): ...


def cosh(*args, **kwargs): ...


def fma(*args, **kwargs): ...


def clz(*args, **kwargs): ...


def make_float4x4(*args, **kwargs): ...


def make_float2x2(*args, **kwargs): ...


def make_int2(*args, **kwargs): ...


def determinant(*args, **kwargs): ...


def normalize(*args, **kwargs): ...


def popcount(*args, **kwargs): ...


def atan(*args, **kwargs): ...


def set_block_size(*args, **kwargs): ...


def max(*args, **kwargs): ...


def rsqrt(*args, **kwargs): ...


def clamp(*args, **kwargs): ...


def tan(*args, **kwargs): ...


def ceil(*args, **kwargs): ...


def log_level_error(*args, **kwargs): ...


def any(*args, **kwargs): ...


def make_ray(*args, **kwargs): ...


def dispatch_id(*args, **kwargs): ...


def kernel_id(*args, **kwargs): ...


def object_id(*args, **kwargs): ...


def warp_lane_count(*args, **kwargs): ...


def warp_lane_id(*args, **kwargs): ...


def length_squared(*args, **kwargs): ...


def make_int4(*args, **kwargs): ...


def transpose(*args, **kwargs): ...


def log(*args, **kwargs): ...


def floor(*args, **kwargs): ...


def make_float3x3(*args, **kwargs): ...


def isnan(*args, **kwargs): ...


def log10(*args, **kwargs): ...


def make_int3(*args, **kwargs): ...


def saturate(*args, **kwargs): ...


def abs(*args, **kwargs): ...


def mod(*args, **kwargs): ...


def log2(*args, **kwargs): ...


def block_id(*args, **kwargs): ...


def make_float4(*args, **kwargs): ...


def struct(*args, **kwargs): ...


def cross(*args, **kwargs): ...


def make_bool2(*args, **kwargs): ...


def exp10(*args, **kwargs): ...


def fract(*args, **kwargs): ...


def dot(*args, **kwargs): ...


def ddx(*args, **kwargs): ...


def ddy(*args, **kwargs): ...


def round(*args, **kwargs): ...


def length(*args, **kwargs): ...


def array(*args, **kwargs): ...


def inverse(*args, **kwargs): ...


def lerp(*args, **kwargs): ...


def exp2(*args, **kwargs): ...


def sin(*args, **kwargs): ...


def acosh(*args, **kwargs): ...


def tanh(*args, **kwargs): ...


def make_float2(*args, **kwargs): ...


def sqrt(*args, **kwargs): ...


def trunc(*args, **kwargs): ...


def atan2(*args, **kwargs): ...


def log_level_info(*args, **kwargs): ...


def make_uint3(*args, **kwargs): ...


def pixel_storage_size(*args, **kwargs): ...


def copysign(*args, **kwargs): ...


def cos(*args, **kwargs): ...


def make_bool4(*args, **kwargs): ...


def select(*args, **kwargs): ...


def exp(*args, **kwargs): ...


def isinf(*args, **kwargs): ...


def pixel_storage_channel_count(*args, **kwargs): ...


def make_bool3(*args, **kwargs): ...


def pixel_storage_to_format_uint(*args, **kwargs): ...


def pixel_storage_to_format_int(*args, **kwargs): ...


def pixel_storage_to_format_float(*args, **kwargs): ...


def ctz(*args, **kwargs): ...


def pow(*args, **kwargs): ...


def reverse(*args, **kwargs): ...


def all(*args, **kwargs): ...


def thread_id(*args, **kwargs): ...


def faceforward(*args, **kwargs): ...


def reflect(*args, **kwargs): ...


def min(*args, **kwargs): ...


def atanh(*args, **kwargs): ...


def asin(*args, **kwargs): ...


def asinh(*args, **kwargs): ...


def acos(*args, **kwargs): ...


class float2x2:
    def __init__(self, *args, **kwargs): ...


class float3x3:
    def __init__(self, *args, **kwargs): ...


class float4x4:
    def __init__(self, *args, **kwargs): ...


class int2:
    def __init__(self, *args, **kwargs): ...


class int3:
    def __init__(self, *args, **kwargs): ...


class int4:
    def __init__(self, *args, **kwargs): ...


class uint2:
    def __init__(self, *args, **kwargs): ...


class uint4:
    def __init__(self, *args, **kwargs): ...


class float2:
    def __init__(self, *args, **kwargs): ...


class float3:
    def __init__(self, *args, **kwargs): ...


class float4:
    def __init__(self, *args, **kwargs): ...


class bool2:
    def __init__(self, *args, **kwargs): ...


class bool3:
    def __init__(self, *args, **kwargs): ...


class bool4:
    def __init__(self, *args, **kwargs): ...


class Context:
    def __init__(self, *args, **kwargs): ...


class Device:
    def __init__(self, *args, **kwargs): ...


class DeviceInterface:
    def __init__(self, *args, **kwargs): ...


class Stream:
    def __init__(self, *args, **kwargs): ...


class Function:
    def __init__(self, *args, **kwargs): ...


class FunctionBuilder:
    def __init__(self, *args, **kwargs): ...


class Expression:
    def __init__(self, *args, **kwargs): ...


class LiteralExpr:
    def __init__(self, *args, **kwargs): ...


class RefExpr:
    def __init__(self, *args, **kwargs): ...


class CallExpr:
    def __init__(self, *args, **kwargs): ...


class UnaryExpr:
    def __init__(self, *args, **kwargs): ...


class BinaryExpr:
    def __init__(self, *args, **kwargs): ...


class MemberExpr:
    def __init__(self, *args, **kwargs): ...


class AccessExpr:
    def __init__(self, *args, **kwargs): ...


class CastExpr:
    def __init__(self, *args, **kwargs): ...


class ScopeStmt:
    def __init__(self, *args, **kwargs): ...


class IfStmt:
    def __init__(self, *args, **kwargs): ...


class LoopStmt:
    def __init__(self, *args, **kwargs): ...


class ForStmt:
    def __init__(self, *args, **kwargs): ...


class Type:
    def __init__(self, *args, **kwargs): ...


class Accel:
    def __init__(self, *args, **kwargs): ...


class AccelModification:
    def __init__(self, *args, **kwargs): ...


class Sampler:
    def __init__(self, *args, **kwargs): ...
